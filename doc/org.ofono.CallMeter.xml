<node>
	<!--
		org.ofono.CallMeter :

		Object path: [variable prefix]/{modem0,modem1,...}
	-->
	<interface name="org.ofono.CallMeter">

		<!--
			Reset:

			Attempts to reset the Accumulated Call Meter.
			Reseting this value requires SIM PIN2, provided
			by the password parameter.

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="Reset">
			<arg name="password" direction="in" type="s" />
		</method>

		<!--
			NearMaximumWarning:

			Emitted shortly before the ACM (Accumulated Call
			Meter) maximum values is reached.  The warning is
			issued approximately when 30 seconds call time
			remains or when starting a call with less than
			30 seconds remaining.
		-->
		<signal name="NearMaximumWarning" />

		<!--
			CallMeter:

			Contains the current call meter value from the ME.
			The values are in 24-bit range, counted in home
			units.
		-->
		<property name="CallMeter" type="u" access="read" />

		<!--
			AccumulatedCallMeter:

			Contains the Accumulated Call Meter (ACM) value
			from the SIM.  When the AccumulatedCallMeter
			value reaches AccumulatedCallMeterMaximum value,
			no further calls can be made until the ACM
			value is reset.  Reset is accomplished using
			the Reset() function.

			The values are in 24-bit range.
		-->
		<property name="AccumulatedCallMeter" type="u" access="read" />

		<!--
			AccumulatedCallMeterMaximum:

			Contains the Accumulated Call Meter maximum value
			on reaching which, calls are prohibited.  This is
			effectively the maximum number of home units
			allowed to be consumed by subscriber.

			According to the GSM specification, setting the value
			to 0, turns off this feature.

			The values are in 24-bit range.
		-->
		<property name="AccumulatedCallMeterMaximum" type="u" access="readwrite" />

		<!--
			PricePerUnit:

			Contains price-per-unit conversion value.  This
			information can be used to convert the home units
			into currency units.
		-->
		<property name="PricePerUnit" type="d" access="readwrite" />

		<!--
			Currency:

			Contains three-character currency code.  This
			information can be used to convert the home
			units into currency units.
		-->
		<property name="Currency" type="s" access="readwrite" />

	</interface>
</node>
