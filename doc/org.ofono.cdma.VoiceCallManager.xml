<node>
	<!--
		org.ofono.cdma.VoiceCallManager:

		Object path: [variable prefix]/{modem0,modem1,...}
	-->
	<interface name="org.ofono.cdma.VoiceCallManager">

		<!--
			GetProperties:

			Returns properties for the VoiceCallManager Interface.
			See the properties section for available properties.
		-->
		<method name="GetProperties">
			<arg name="properties" direction="out" type="a{sv}" />
		</method>

		<!--
			Dial:

			Initiates a new outgoing call.  This is usually
			implemented using the ATD AT command.

			Possible Errors: [service].Error.InProgress
					 [service].Error.InvalidArguments
					 [service].Error.InvalidFormat
					 [service].Error.NotImplemented
					 [service].Error.Failed
		-->
		<method name="Dial">
			<arg name="number" direction="in" type="s" />
		</method>

		<!--
			Hangup:

			Hangup all active calls.

			Possible Errors: [service].Error.InProgress
					 [service].Error.NotImplemented
					 [service].Error.Failed
		-->
		<method name="Hangup" />

		<!--
			Answer:

			Answer the incoming call.  This only affects the
			incoming call.
		-->
		<method name="Answer" />

		<!--
			SendFlash:

			Sends the flash string to the network.
		-->
		<method name="SendFlash">
			<arg name="flash" direction="in" type="s" />
		</method>

		<!--
			SendTones:

			Sends the DTMF tones to the network.  The tones have
			a fixed duration.  Tones can be one of: '0' - '9',
			'*', '#', 'A', 'B', 'C', 'D'.  The last four are
			typically not used in normal circumstances.
		-->
		<method name="SendTones">
			<arg name="tones" direction="in" type="s" />
		</method>

		<!--
			SetProperty:

			Changes the value of the specified property. Only
			properties that are listed as readwrite are
			changeable. On success a PropertyChanged signal
			will be emitted.

			Possible Errors: [service].Error.InvalidArguments
					 [service].Error.DoesNotExist
		-->
		<method name="SetProperty">
			<arg name="name" direction="in" type="s" />
			<arg name="value" direction="in" type="v" />
		</method>

		<!--
			PropertyChanged:

			Signal is emitted whenever a property has changed.
			The new value is passed as the signal argument.
		-->
		<signal name="PropertyChanged">
			<arg name="name" type="s" />
			<arg name="value" type="v" />
		</signal>

		<!--
			DisconnectReason:

			This signal is emitted when the modem manager can
			provide extra information about why the call was
			released. The possible reason values are:
				"local" - The call was release due to local
						user action
				"remote" - Remote party released the call
				"network" - Network released the call, most
						likely due to low signal or
						other network failure

			Not all implementations are able to provide this
			information, so applications should treat the emission
			of this signal as optional. This signal will be
			emitted before the PropertyChanged signal.
		-->
		<signal name="DisconnectReason">
			<arg name="reason" type="s" />
		</signal>

		<!--
			State:

			Contains the state of the current call.  The state
			can be one of:
				- "active" - The call is active
				- "dialing" - The call is being dialed
				- "alerting" - The remote party is being alerted
				- "incoming" - Incoming call in progress
				- "disconnected" - No call is connected
		-->
		<property name="State" type="s" access="read" />

		<!--
			CallWaiting:

			Contains whether a call is waiting.
		-->
		<property name="CallWaiting" type="b" access="read" />

		<!--
			CallWaitingNumber:

			Contains the call waiting number.

			Optional.
		-->
		<property name="CallWaitingNumber" type="s" access="read" />

		<!--
			ToneDuration:

			Contains the length of the DTMF tone duration.  The
			currently supported values are:
				"short",
				"long"
		-->
		<property name="ToneDuration" type="s" access="readwrite" />

		<!--
			LineIdentification:

			Contains the Line Identification information returned
			by the network, if present. For incoming calls this is
			effectively the CLIP. For outgoing calls this attribute
			will hold the dialed number.

			Please note that after sending flash this property
			will be empty.
		-->
		<property name="LineIdentification" type="s" access="read" />

		<!--
			StartTime:

			Contains the starting time of the call.  The time is
			stamped when the call enters the "active" state.
			Client applications can use this to infer somewhat
			reliable call duration information.

			Please note that after sending Flash, there will not be
			any StartTime property change for the Flash
			string/number.

			Optional.
		-->
		<property name="StartTime" type="s" access="read" />

	</interface>
</node>
