<node>
	<!--
		org.ofono.NetworkRegistration:

		Object path: [variable prefix]/{modem0,modem1,...}
	-->
	<interface name="org.ofono.NetworkRegistration">

		<!--
			GetProperties:

			Returns all network registration properties. See the
			properties section for available properties.
		-->
		<method name="GetProperties">
			<arg name="properties" direction="out" type="a{sv}" />
		</method>

		<!--
			Register:

			Attempts to register to the default network. The
			default network is normally selected by the settings
			from the SIM card.

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.NotImplemented
					 #org.ofono.Error.Failed
					 #org.ofono.Error.AccessDenied
		-->
		<method name="Register" />

		<!--
			GetOperators:

			Retrieve array of operator object and properties.

			This method can be used to retrieve the current
			operator list.  This is either an empty list (when
			not registered to any network) or a list with one
			or more operators (when registered).

			This list will also return cached values of previously
			seen networks.  Manual updates to list can only be
			done via the Scan method call.
		-->
		<method name="GetOperators">
			<arg name="operators" direction="out" type="a{oa{sv}}" />
		</method>

		<!--
			Scan:

			Runs a network operator scan to discover the currently
			available operators.  This operation can take several
			seconds, and up to several minutes on some modems.
			This can be used to help the user determine what is
			the best operator to use if forced to roam on a
			foreign network.

			NOTE: The operator scan can interfere with any active
			GPRS contexts.  Expect the context to be unavailable
			for the duration of the operator scan.

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.NotImplemented
					 #org.ofono.Error.Failed
					 #org.ofono.Error.AccessDenied
		-->
		<method name="Scan">
			<arg name="operators" direction="out" type="a{oa{sv}}" />
		</method>

		<!--
			PropertyChanged:

			This signal indicates a changed value of the given
			property.
		-->
		<signal name="PropertyChanged">
			<arg name="name" type="s" />
			<arg name="value" type="v" />
		</signal>

		<!--
			Mode:

			The current registration mode. The default of this
			is "auto", but can be changed during operation. This
			property will change to "manual" if the Register()
			method of an operator is called.

			The possible values are:
				"auto"       Network registration is performed
				             automatically.
				"auto-only"  Network registration is performed
				             automatically, and manual
				             selection is disabled.
				"manual"     Network operator is selected
				             manually. If the operator is
				             currently not selected,
				             registration is not attempted.
		-->
		<property name="Mode" type="s" access="read" />

		<!--
			Status:

			The current registration status of a modem.

			The possible values are:
				"unregistered"  Not registered to any network
				"registered"    Registered to home network
				"searching"     Not registered, but searching
				"denied"        Registration has been denied
				"unknown"       Status is unknown
				"roaming"       Registered, but roaming
		-->
		<property name="Status" type="s" access="read" />

		<!--
			LocationAreaCode:

			Contains the current location area code.

			TODO: Agent based location signalling would be better.

			Optional.
		-->
		<property name="LocationAreaCode" type="q" access="read" />

		<!--
			CellId:

			Contains the current network cell id.

			TODO: Agent based location signalling would be better.

			Optional.
		-->
		<property name="CellId" type="u" access="read" />

		<!--
			MobileCountryCode:

			Contains the Mobile Country Code (MCC).  This is
			repeated here for convenience.  It can also be obtained
			from the NetworkOperator interface.

			Optional.
		-->
		<property name="MobileCountryCode" type="s" access="read" />

		<!--
			MobileNetworkCode:

			Contains the Mobile Network Code (MNC).  This is
			repeated here for convenience.  It can also be obtained
			from the NetworkOperator interface.

			Optional.
		-->
		<property name="MobileNetworkCode" type="s" access="read" />

		<!--
			Technology:

			Contains the technology of the current network.

			The possible values are: "gsm", "edge", "umts", "hspa",
							"lte"

			Optional.
		-->
		<property name="Technology" type="s" access="read" />

		<!--
			Name:

			Contains the current operator name, suitable for
			display on the idle screen or an empty string if
			not registered to a network.
		-->
		<property name="Name" type="s" access="read" />

		<!--
			Strength:

			Contains the current signal strength as a percentage
			between 0-100 percent.

			Optional.
		-->
		<property name="Strength" type="y" access="read" />

		<!--
			BaseStation:

			If the Cell Broadcast service is available and
			properly configured, this attribute will contain the
			name of the current service cell.  This is typically a
			descriptive name of the local area, e.g. name of the
			suburb.  If no name is provided or becomes
			unavailable, this property will not be returned by
			GetProperties or will be set to an empty string.

			Optional.
		-->
		<property name="BaseStation" type="s" access="read" />

	</interface>
</node>
