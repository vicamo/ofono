<node>
	<!--
		org.ofono.dundee.Device:

		Object path: /{device0,device1,...}
	-->
	<interface name="org.ofono.dundee.Device">

		<!--
			GetProperties:

			Returns properties for the device object. See
			the properties section for available properties.
		-->
		<method name="GetProperties">
			<arg name="properties" direction="out" type="a{sv}" />
		</method>

		<!--
			SetProperty:

			Changes the value of the specified property. Only
			properties that are listed as readwrite are
			changeable. On success a PropertyChanged signal
			will be emitted.

			Possible Errors: #org.ofono.Error.Timedout
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.Failed
		-->
		<method name="SetProperty">
			<arg name="name" direction="in" type="s" />
			<arg name="value" direction="in" type="v" />
		</method>

		<!--
			PropertyChanged:

			This signal indicates a changed value of the given
			property.
		-->
		<signal name="PropertyChanged">
			<arg name="name" type="s" />
			<arg name="value" type="v" />
		</signal>

		<!--
			Name:

			Friendly name of the device.
		-->
		<property name="Name" type="s" access="read" />

		<!--
			Active:

			Holds whether the device is connected. A
			connection will be established when this value
			is set to true. A existing connection will be
			teared down when set to false.
		-->
		<property name="Active" type="b" access="readwrite" />

		<!--
			Settings:

			Holds all the IP network settings.

			string Interface [readonly, optional]

				Holds the interface of the network interface
				used by this connection (e.g. "ppp0" "usb0")

			string Address [readonly, optional]

				Holds the IP address for this connection.

			array{string} DomainNameServers [readonly, optional]

				Holds the list of domain name servers for this
				connection.
		-->
		<property name="Settings" type="a{sv}" access="read" />

	</interface>
</node>
