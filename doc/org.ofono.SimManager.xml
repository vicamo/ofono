<node>
	<!--
		org.ofono.SimManager:

		Object path: [variable prefix]/{modem0,modem1,...}
	-->
	<interface name="org.ofono.SimManager">

		<!--
			GetProperties:

			Returns SIM properties for the modem object.  See
			the properties section for available properties.
		-->
		<method name="GetProperties">
			<arg name="properties" direction="out" type="a{sv}" />
		</method>

		<!--
			ChangePin:

			Changes the pin given by string type.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="ChangePin">
			<arg name="type" direction="in" type="s" />
			<arg name="oldpin" direction="in" type="s" />
			<arg name="newpin" direction="in" type="s" />
		</method>

		<!--
			EnterPin:

			Enters the currently pending pin.  The type value must
			match the pin type being asked in the PinRequired
			property.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="EnterPin">
			<arg name="type" direction="in" type="s" />
			<arg name="pin" direction="in" type="s" />
		</method>

		<!--
			ResetPin:

			Provides the unblock key to the modem and if correct
			resets the pin to the new value of newpin.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="ResetPin">
			<arg name="type" direction="in" type="s" />
			<arg name="puk" direction="in" type="s" />
			<arg name="newpin" direction="in" type="s" />
		</method>

		<!--
			LockPin:

			Activates the lock for the particular pin type.  The
			device will ask for a PIN automatically next time the
			device is turned on or the SIM is removed and
			re-inserted.  The current PIN is required for the
			operation to succeed.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="LockPin">
			<arg name="type" direction="in" type="s" />
			<arg name="pin" direction="in" type="s" />
		</method>

		<!--
			UnlockPin:

			Deactivates the lock for the particular pin type.  The
			current PIN is required for the operation to succeed.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="UnlockPin">
			<arg name="type" direction="in" type="s" />
			<arg name="pin" direction="in" type="s" />
		</method>

		<!--
			GetIcon:

			Obtain the icon given by id.  Only ids greater than 1
			are valid.  XPM format is currently used to return the
			icon data.

			Possible Errors: #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.Failed
		-->
		<method name="GetIcon">
			<arg name="id" direction="in" type="y" />
			<arg name="icon" direction="out" type="ay" />
		</method>

		<!--
			PropertyChanged:

			This signal indicates a changed value of the given
			property.
		-->
		<signal name="PropertyChanged">
			<arg name="name" type="s" />
			<arg name="value" type="v" />
		</signal>

		<!--
			Present:

			True if a SIM card is detected.  There are
			no other properties if false.
		-->
		<property name="Present" type="b" access="read" />

		<!--
			SubscriberIdentity:

			Contains the IMSI of the SIM, if available.

			Optional.
		-->
		<property name="SubscriberIdentity" type="s" access="read" />

		<!--
			MobileCountryCode:

			Contains the Mobile Country Code (MCC) of the home
			network (not to be confused with the currently
			registered network reported on NetworkRegistration
			interface) and is read directly from the SIM if
			available.

			Optional.
		-->
		<property name="MobileCountryCode" type="s" access="read" />

		<!--
			MobileNetworkCode:

			Contains the Mobile Network Code (MNC) of the home
			network (not to be confused with the currently
			registered network reported on NetworkRegistration
			interface) and is read directly from the SIM if
			available.

			Optional.
		-->
		<property name="MobileNetworkCode" type="s" access="read" />

		<!--
			SubscriberNumbers:

			Contains the list of subscriber numbers.  This is
			usually stored in the EFmsisdn sim file.
		-->
		<property name="SubscriberNumbers" type="as" access="readwrite" />

		<!--
			PreferredLanguages:

			Contains the list of preferred languages from the SIM,
			if available.

			Optional.
		-->
		<property name="PreferredLanguages" type="as" access="read" />

		<!--
			ServiceNumbers:

			Contains a dictionary of service dialing numbers from
			the SIM, if available.

			Optional.
		-->
		<property name="ServiceNumbers" type="a{ss}" access="read" />

		<!--
			PinRequired:

			Contains the string type of the pin required by the
			modem.  The possible values are:
				"none" - Nothing is required
				"pin" - SIM PIN is required
				"phone" - Phone-to-SIM PIN is required
				"firstphone" - Phone-to-very-first SIM
						PIN is required
				"pin2" - SIM PIN2 is required
				"network" - Network Personalization password is
						required
				"netsub" - Network subset personalization
						password is required
				"service" - Service Provider personalization
						password is required
				"corp" - Corporate personalization password
						is required
				"puk" - SIM PUK is required
				"firstphonepuk" - Phone-to-very-first SIM PUK is
						required
				"puk2" - SIM PUK2 is required
				"networkpuk" - Network personalization unblocking
						password is required
				"netsubpuk" - Network subset personalization
						unblocking password is required
				"servicepuk" - Service provider personalization
						unblocking password is required
				"corppuk" - Corporate personalization unblocking
						password is required
		-->
		<property name="PinRequired" type="s" access="read" />

		<!--
			LockedPins:

			Contains the pins that are currently locked and will
			require the user to enter the password at startup.
			Using LockPin and UnlockPin will result in changes to
			this property.

			The list contains elements of the same format as the
			PinRequired property.
		-->
		<property name="LockedPins" type="as" access="read" />

		<!--
			CardIdentifier:

			Contains the Integrated Circuit Card Identifer (ICCID)
			which is read directly from the SIM.
		-->
		<property name="CardIdentifier" type="s" access="read" />

		<!--
			FixedDialing:

			True if Fixed Dialing service is enabled in SIM card.

			If FDN is enabled, oFono halts the SIM initialization
			procedure and only emergency calls are allowed.
		-->
		<property name="FixedDialing" type="b" access="read" />

		<!--
			BarredDialing:

			True if Barred Dialing service is enabled in SIM card.

			If BDN is enabled, oFono halts the SIM initialization
			procedure and only emergency calls are allowed.
		-->
		<property name="BarredDialing" type="b" access="read" />

		<!--
			Retries:

			Contains all the retry counters available. The possible
			values for the first field are the same as in
			PinRequired property. The second field contains is the
			counter for that pin type.

			This property is updated after each operation that
			might have changed the retry counters, i.e. calls to
			ChangePin(), EnterPin(), ResetPin() LockPin(),
			UnlockPin().
		-->
		<property name="Retries" type="a{sy}" access="read" />

	</interface>
</node>
