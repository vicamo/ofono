<node>
	<!--
		org.ofono.ConnectionManager:

		Object path: [variable]
	-->
	<interface name="org.ofono.ConnectionManager">

		<!--
			GetProperties:

			Returns all global system properties. See the
			properties section for available properties.
		-->
		<method name="GetProperties">
			<arg name="properties" direction="out" type="a{sv}" />
		</method>

		<!--
			SetProperty:

			Sets the property to a desired value

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.NotImplemented
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.Failed
		-->
		<method name="SetProperty">
			<arg name="name" direction="in" type="s" />
			<arg name="value" direction="in" type="v" />
		</method>

		<!--
			DeactivateAll:

			Deactivates all active contexts.

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.Failed
		-->
		<method name="DeactivateAll" />

		<!--
			GetContexts:

			Get array of context objects and properties.

			The method should only be call once per application.
			Further changes shall be monitored via ContextAdded
			ContextRemoved signals.
		-->
		<method name="GetContexts">
			<arg name="contexts" direction="out" type="a{oa{sv}}" />
		</method>

		<!--
			AddContext:

			Creates a new Primary context.  The type contains
			the intended purpose of the context.

			For possible values of the type parameter see the
			Type documentation of ConnectionContext interface.
			Returns the object path of the created context.

			Possible Errors: #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.Failed
		-->
		<method name="AddContext">
			<arg name="type" direction="in" type="s" />
			<arg name="context" direction="out" type="o" />
		</method>

		<!--
			RemoveContext:

			Removes a primary context.  All secondary contexts, if
			any, associated with the primary context are also
			removed.

			Possible Errors: #org.ofono.Error.InProgress
					 #org.ofono.Error.InvalidArguments
					 #org.ofono.Error.InvalidFormat
					 #org.ofono.Error.NotFound
					 #org.ofono.Error.Failed
		-->
		<method name="RemoveContext">
			<arg name="context" direction="in" type="o" />
		</method>

		<!--
			PropertyChanged:

			This signal indicates a changed value of the given
			property.
		-->
		<signal name="PropertyChanged">
			<arg name="name" type="s" />
			<arg name="value" type="v" />
		</signal>

		<!--
			ContextAdded:

			Signal that gets emitted when a new context has
			been created.  It contains the context object path
			and its properties.
		-->
		<signal name="ContextAdded">
			<arg name="context" type="o" />
			<arg name="properties" type="a{sv}" />
		</signal>

		<!--
			ContextRemoved:

			Signal that gets emitted when a context has been
			removed.  The object path of the context is only
			included for reference.  Its properties are no
			longer accessible at this point.
		-->
		<signal name="ContextRemoved">
			<arg name="context" type="o" />
		</signal>

		<!--
			Attached:

			Contains whether the Packet Radio Service is attached.
			The attach state might change dynamically based on
			availability of network resources.  If this value
			changes to false, the user can assume that all
			contexts have been deactivated.

			If the modem is detached, certain features will not
			be available, e.g. receiving SMS over packet radio
			or network initiated PDP activation.
		-->
		<property name="Attached" type="b" access="read" />

		<!--
			Bearer:

			Contains the data bearer technology as reported by the
			GPRS service registration (if known).

			Possible values are:
			"none", "gsm", "edge", "umts", "hsdpa", "hsupa",
			"hspa" (HSDPA and HSUPA at the same time) and
			"lte"

			Optional.
		-->
		<property name="Bearer" type="s" access="read" />

		<!--
			Suspended:

			Contains whether the GPRS service is suspended.
			During suspended state the modem is attached to the
			GPRS service and all contexts remain established,
			however, data transfer is not possible.

			The suspended state may be entered if the modem is
			temporarily out of network coverage. GPRS class B
			modems will suspend GPRS whenever a voice call is
			active at the same time. GPRS may also be suspended
			if the network does not support simultaneous packet
			data and voice. Various signalling procedures may
			also cause GPRS to be briefly suspended.

			As the suspension may be brief, clients should wait
			for an appropriate time for GPRS service to resume
			before taking corrective action.

			Optional.
		-->
		<property name="Suspended" type="b" access="read" />

		<!--
			RoamingAllowed:

			Contains whether data roaming is allowed.  In the off
			setting, if the packet radio registration state
			indicates that the modem is roaming, oFono will
			automatically detach and no further connection
			establishment will be possible.
		-->
		<property name="RoamingAllowed" type="b" access="readwrite" />

		<!--
			Powered:

			Controls whether packet radio use is allowed. Setting
			this value to off detaches the modem from the
			Packet Domain network.
		-->
		<property name="Powered" type="b" access="readwrite" />

	</interface>
</node>
